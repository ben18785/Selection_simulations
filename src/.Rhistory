g <-
soln %>%
ggplot(aes(x=time, y=value, colour=as.factor(variable))) +
geom_line() +
theme_classic() +
scale_color_brewer("Variable", palette = "Dark2") +
scale_y_continuous(labels = scales::percent) +
ylab("Population density") +
xlab("Time, years")
g
ggsave("../outputs/non_linear_carcass_vs_pop_ode.pdf", g)
ggsave("../outputs/non_linear_carcass_vs_pop_ode.png", g)
52/3
simple_derivative <- function(t, state, parameters){
alpha <- parameters[1]
kappa <- parameters[2]
gamma <- parameters[3]
mu_1 <- parameters[4]
mu_2 <- parameters[5]
mu_3 <- parameters[6]
mu_4 <- parameters[7]
E <- state[1]
C_1 <- state[2]
C_2 <- state[3]
C_3 <- state[4]
C_4 <- state[5]
dEdt <- alpha * E * (1 - E / kappa)
dC1dt <- gamma * alpha * E / kappa - mu_1 * C_1
dC2dt <- mu_1 * C_1 - mu_2 * C_2
dC3dt <- mu_2 * C_2 - mu_3 * C_3
dC4dt <- mu_3 * C_3 - mu_4 * C_4
return(list(c(dEdt, dC1dt, dC2dt, dC3dt, dC4dt)))
}
time <- seq(0, 60, 0.1)
# use estimates from Chris' World Bank doc for decay rates
params <- list(alpha=0.1,
kappa=1000,
gamma=1,
mu_1=17,
mu_2=2,
mu_3=1,
mu_4=1)
E_0 <- params$kappa
C_1_0 <- params$alpha * params$gamma * E_0 / (params$kappa * params$mu_1)
C_2_0 <- params$mu_1 * C_1_0 / params$mu_2
C_3_0 <- params$mu_2 * C_2_0 / params$mu_3
C_4_0 <- params$mu_3 * C_3_0 / params$mu_4
initial_state <- c(E=E_0,
C_1=C_1_0,
C_2=C_2_0,
C_3=C_3_0,
C_4=C_4_0)
# check I have equilibria correct
ode(y=initial_state, times=time, func = simple_derivative, parms=unlist(params)) %>%
as.data.frame() %>%
mutate(C_1=C_1 / E,
C_2=C_2 / E,
C_3=C_3 / E,
C_4=C_4 / E) %>%
melt(id.vars="time") %>%
filter(variable!="E") %>%
ggplot(aes(x=time, y=value, colour=as.factor(variable))) +
geom_line()
spike_derivative <- function(t, state, parameters){
alpha <- parameters[1]
kappa <- parameters[2]
gamma <- parameters[3]
mu_1 <- parameters[4]
mu_2 <- parameters[5]
mu_3 <- parameters[6]
mu_4 <- parameters[7]
E <- state[1]
C_1 <- state[2]
C_2 <- state[3]
C_3 <- state[4]
C_4 <- state[5]
dEdt <- alpha * E * (1 - E / ((1 - 0.5 * exp(-2 * t)) * kappa))
dC1dt <- gamma * alpha * E / kappa - mu_1 * C_1
dC2dt <- mu_1 * C_1 - mu_2 * C_2
dC3dt <- mu_2 * C_2 - mu_3 * C_3
dC4dt <- mu_3 * C_3 - mu_4 * C_4
return(list(c(dEdt, dC1dt, dC2dt, dC3dt, dC4dt)))
}
soln <- ode(y=initial_state, times=time, func = spike_derivative, parms=unlist(params))
soln <- soln %>%
as.data.frame() %>%
mutate(C_1=C_1 / E,
C_2=C_2 / E,
C_3=C_3 / E,
C_4=C_4 / E) %>%
mutate(E=E / first(E),
C_1=C_1 / first(C_1),
C_2=C_2 / first(C_2),
C_3=C_3 / first(C_3),
C_4=C_4 / first(C_4)) %>%
melt(id.vars="time")
g <-
soln %>%
ggplot(aes(x=time, y=value, colour=as.factor(variable))) +
geom_line() +
theme_classic() +
scale_color_brewer("Variable", palette = "Dark2") +
scale_y_continuous(labels = scales::percent) +
ylab("Population density") +
xlab("Time, years")
g
ggsave("../outputs/non_linear_carcass_vs_pop_ode.png", g)
simple_derivative <- function(t, state, parameters){
alpha <- parameters[1]
kappa <- parameters[2]
gamma <- parameters[3]
mu_1 <- parameters[4]
mu_2 <- parameters[5]
mu_3 <- parameters[6]
mu_4 <- parameters[7]
E <- state[1]
C_1 <- state[2]
C_2 <- state[3]
C_3 <- state[4]
C_4 <- state[5]
dEdt <- alpha * E * (1 - E / kappa)
dC1dt <- gamma * alpha * E / kappa - mu_1 * C_1
dC2dt <- mu_1 * C_1 - mu_2 * C_2
dC3dt <- mu_2 * C_2 - mu_3 * C_3
dC4dt <- mu_3 * C_3 - mu_4 * C_4
return(list(c(dEdt, dC1dt, dC2dt, dC3dt, dC4dt)))
}
time <- seq(0, 20, 0.1)
# use estimates from Chris' World Bank doc for decay rates
params <- list(alpha=0.1,
kappa=1000,
gamma=1,
mu_1=17,
mu_2=2,
mu_3=1,
mu_4=1)
E_0 <- params$kappa
C_1_0 <- params$alpha * params$gamma * E_0 / (params$kappa * params$mu_1)
C_2_0 <- params$mu_1 * C_1_0 / params$mu_2
C_3_0 <- params$mu_2 * C_2_0 / params$mu_3
C_4_0 <- params$mu_3 * C_3_0 / params$mu_4
initial_state <- c(E=E_0,
C_1=C_1_0,
C_2=C_2_0,
C_3=C_3_0,
C_4=C_4_0)
# check I have equilibria correct
ode(y=initial_state, times=time, func = simple_derivative, parms=unlist(params)) %>%
as.data.frame() %>%
mutate(C_1=C_1 / E,
C_2=C_2 / E,
C_3=C_3 / E,
C_4=C_4 / E) %>%
melt(id.vars="time") %>%
filter(variable!="E") %>%
ggplot(aes(x=time, y=value, colour=as.factor(variable))) +
geom_line()
spike_derivative <- function(t, state, parameters){
alpha <- parameters[1]
kappa <- parameters[2]
gamma <- parameters[3]
mu_1 <- parameters[4]
mu_2 <- parameters[5]
mu_3 <- parameters[6]
mu_4 <- parameters[7]
E <- state[1]
C_1 <- state[2]
C_2 <- state[3]
C_3 <- state[4]
C_4 <- state[5]
dEdt <- alpha * E * (1 - E / ((1 - 0.5 * exp(-2 * t)) * kappa))
dC1dt <- gamma * alpha * E / kappa - mu_1 * C_1
dC2dt <- mu_1 * C_1 - mu_2 * C_2
dC3dt <- mu_2 * C_2 - mu_3 * C_3
dC4dt <- mu_3 * C_3 - mu_4 * C_4
return(list(c(dEdt, dC1dt, dC2dt, dC3dt, dC4dt)))
}
soln <- ode(y=initial_state, times=time, func = spike_derivative, parms=unlist(params))
soln <- soln %>%
as.data.frame() %>%
mutate(C_1=C_1 / E,
C_2=C_2 / E,
C_3=C_3 / E,
C_4=C_4 / E) %>%
mutate(E=E / first(E),
C_1=C_1 / first(C_1),
C_2=C_2 / first(C_2),
C_3=C_3 / first(C_3),
C_4=C_4 / first(C_4)) %>%
melt(id.vars="time")
g <-
soln %>%
ggplot(aes(x=time, y=value, colour=as.factor(variable))) +
geom_line() +
theme_classic() +
scale_color_brewer("Variable", palette = "Dark2") +
scale_y_continuous(labels = scales::percent) +
ylab("Population density") +
xlab("Time, years")
g
ggsave("../outputs/non_linear_carcass_vs_pop_ode.png", g)
spike_derivative <- function(t, state, parameters){
alpha <- parameters[1]
kappa <- parameters[2]
gamma <- parameters[3]
mu_1 <- parameters[4]
mu_2 <- parameters[5]
mu_3 <- parameters[6]
mu_4 <- parameters[7]
E <- state[1]
C_1 <- state[2]
C_2 <- state[3]
C_3 <- state[4]
C_4 <- state[5]
dEdt <- alpha * E * (1 - E / ((1 - 0.9 * exp(-2 * t)) * kappa))
dC1dt <- gamma * alpha * E / kappa - mu_1 * C_1
dC2dt <- mu_1 * C_1 - mu_2 * C_2
dC3dt <- mu_2 * C_2 - mu_3 * C_3
dC4dt <- mu_3 * C_3 - mu_4 * C_4
return(list(c(dEdt, dC1dt, dC2dt, dC3dt, dC4dt)))
}
soln <- ode(y=initial_state, times=time, func = spike_derivative, parms=unlist(params))
soln <- soln %>%
as.data.frame() %>%
mutate(C_1=C_1 / E,
C_2=C_2 / E,
C_3=C_3 / E,
C_4=C_4 / E) %>%
mutate(E=E / first(E),
C_1=C_1 / first(C_1),
C_2=C_2 / first(C_2),
C_3=C_3 / first(C_3),
C_4=C_4 / first(C_4)) %>%
melt(id.vars="time")
g <-
soln %>%
ggplot(aes(x=time, y=value, colour=as.factor(variable))) +
geom_line() +
theme_classic() +
scale_color_brewer("Variable", palette = "Dark2") +
scale_y_continuous(labels = scales::percent) +
ylab("Population density") +
xlab("Time, years")
g
ggsave("../outputs/non_linear_carcass_vs_pop_ode.png", g)
fGetFinalYule <- function(selection){
filename <- paste0("yule_initial_", selection, ".csv")
filename1 <- paste0("yule_changes_", selection, ".csv")
aInitial <- read.csv(paste0("../data/negative_yule_moran/", filename))
changes <- read.csv(paste0("../data/negative_yule_moran/", filename1))[-1, ]
aFinal <- c(changes$added, aInitial$X0[1])
aFinal <- table(aFinal) %>%
as.data.frame()
p <- aFinal$Freq
p <- p / sum(p)
return(p)
}
fDiversity <- function(p){
div <- 0
for(i in 1:length(p))
if(p[i] != 0)
div <- div + p[i] * log(p[i])
return(-div)
}
fDiversity(fGetFinalYule("0.0"))
rm(list=ls())
library(tidyverse)
fGetFinalYule <- function(selection){
filename <- paste0("yule_initial_", selection, ".csv")
filename1 <- paste0("yule_changes_", selection, ".csv")
aInitial <- read.csv(paste0("../data/negative_yule_moran/", filename))
changes <- read.csv(paste0("../data/negative_yule_moran/", filename1))[-1, ]
aFinal <- c(changes$added, aInitial$X0[1])
aFinal <- table(aFinal) %>%
as.data.frame()
p <- aFinal$Freq
p <- p / sum(p)
return(p)
}
fDiversity <- function(p){
div <- 0
for(i in 1:length(p))
if(p[i] != 0)
div <- div + p[i] * log(p[i])
return(-div)
}
fDiversity(fGetFinalYule("0.0"))
fDiversity(fGetFinalYule("-0.1"))
fDiversity(fGetFinalYule("-0.25"))
fDiversity(fGetFinalYule("-0.5"))
fDiversity(fGetFinalYule("-0.75"))
fGetFinalMoran <- function(selection){
filename <- paste0("moran_initial_", selection, ".csv")
filename1 <- paste0("moran_changes_", selection, ".csv")
aInitial <- read.csv(paste0("../data/negative_yule_moran/", filename))
changes <- read.csv(paste0("../data/negative_yule_moran/", filename1))[-1, ]
added <- table(changes$added) %>%
as.data.frame() %>%
rename(add=Freq)
killed <- table(changes$killed) %>%
as.data.frame() %>%
rename(kill=Freq)
combined <- full_join(added, killed)
aInitial <- aInitial[, -1] %>%
rename(Var1=index, initial=X0) %>%
mutate(Var1=as.character(Var1))
combined <- full_join(combined, aInitial)
combined[is.na(combined)] <- 0
combined$Var1 <- as.numeric(combined$Var1)
combined <- combined[order(combined$Var1), ]
combined <- combined %>%
mutate(final=initial + add - kill)
p <- combined$final
p <- p / sum(p)
return(p)
}
fDiversity(fGetFinalMoran("0.0"))
fGetFinalYule <- function(selection){
filename <- paste0("yule_initial_", selection, ".csv")
filename1 <- paste0("yule_changes_", selection, ".csv")
aInitial <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename))
changes <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename1))[-1, ]
aFinal <- c(changes$added, aInitial$X0[1])
aFinal <- table(aFinal) %>%
as.data.frame()
p <- aFinal$Freq
p <- p / sum(p)
return(p)
}
fDiversity <- function(p){
div <- 0
for(i in 1:length(p))
if(p[i] != 0)
div <- div + p[i] * log(p[i])
return(-div)
}
fDiversity(fGetFinalYule("0.0"))
fDiversity(fGetFinalYule("-0.1"))
fDiversity(fGetFinalYule("-0.25"))
fDiversity(fGetFinalYule("-0.5"))
fDiversity(fGetFinalYule("-0.75"))
fGetFinalMoran <- function(selection){
filename <- paste0("moran_initial_", selection, ".csv")
filename1 <- paste0("moran_changes_", selection, ".csv")
aInitial <- read.csv(paste0("../data/negative_yule_moran/", filename))
changes <- read.csv(paste0("../data/negative_yule_moran/", filename1))[-1, ]
added <- table(changes$added) %>%
as.data.frame() %>%
rename(add=Freq)
killed <- table(changes$killed) %>%
as.data.frame() %>%
rename(kill=Freq)
combined <- full_join(added, killed)
aInitial <- aInitial[, -1] %>%
rename(Var1=index, initial=X0) %>%
mutate(Var1=as.character(Var1))
combined <- full_join(combined, aInitial)
combined[is.na(combined)] <- 0
combined$Var1 <- as.numeric(combined$Var1)
combined <- combined[order(combined$Var1), ]
combined <- combined %>%
mutate(final=initial + add - kill)
p <- combined$final
p <- p / sum(p)
return(p)
}
fDiversity(fGetFinalMoran("0.0"))
fGetFinalMoran <- function(selection){
filename <- paste0("moran_initial_", selection, ".csv")
filename1 <- paste0("moran_changes_", selection, ".csv")
aInitial <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename))
changes <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename1))[-1, ]
added <- table(changes$added) %>%
as.data.frame() %>%
rename(add=Freq)
killed <- table(changes$killed) %>%
as.data.frame() %>%
rename(kill=Freq)
combined <- full_join(added, killed)
aInitial <- aInitial[, -1] %>%
rename(Var1=index, initial=X0) %>%
mutate(Var1=as.character(Var1))
combined <- full_join(combined, aInitial)
combined[is.na(combined)] <- 0
combined$Var1 <- as.numeric(combined$Var1)
combined <- combined[order(combined$Var1), ]
combined <- combined %>%
mutate(final=initial + add - kill)
p <- combined$final
p <- p / sum(p)
return(p)
}
fDiversity(fGetFinalMoran("0.0"))
fDiversity(fGetFinalMoran("-0.1"))
fDiversity(fGetFinalMoran("-0.2"))
fDiversity(fGetFinalMoran("-0.5"))
fDiversity(fGetFinalMoran("-1.0"))
fGetFinalYuleData <- function(selection){
filename <- paste0("yule_initial_", selection, ".csv")
filename1 <- paste0("yule_changes_", selection, ".csv")
aInitial <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename))
changes <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename1))[-1, ]
aFinal <- c(changes$added, aInitial$X0[1])
aFinal <- table(aFinal) %>%
as.data.frame()
saveRDS(aFinal, paste0("../data/negative_yule_moran/processed/yule_", selection, ".rds"))
return(aFinal)
}
aDF_0 <- fGetFinalYuleData("0.0")
aDF_0.1 <- fGetFinalYuleData("-0.1")
aDF_0.25 <- fGetFinalYuleData("-0.25")
aDF_0.5 <- fGetFinalYuleData("-0.5")
aDF_0.75 <- fGetFinalYuleData("-0.75")
fGetFinalMoranData <- function(selection){
filename <- paste0("moran_initial_", selection, ".csv")
filename1 <- paste0("moran_changes_", selection, ".csv")
aInitial <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename))
changes <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename1))[-1, ]
added <- table(changes$added) %>%
as.data.frame() %>%
rename(add=Freq)
killed <- table(changes$killed) %>%
as.data.frame() %>%
rename(kill=Freq)
combined <- full_join(added, killed)
aInitial <- aInitial[, -1] %>%
rename(Var1=index, initial=X0) %>%
mutate(Var1=as.character(Var1))
combined <- full_join(combined, aInitial)
combined[is.na(combined)] <- 0
combined$Var1 <- as.numeric(combined$Var1)
combined <- combined[order(combined$Var1), ]
combined <- combined %>%
mutate(final=initial + add - kill) %>%
filter(final>0) %>%
select(Var1, final) %>%
rename(Freq=final)
saveRDS(combined, paste0("../data/negative_yule_moran/processed/moran_", selection, ".rds"))
return(combined)
}
aDF <- fGetFinalMoranData("0.0")
aDF <- fGetFinalMoranData("-0.1")
aDF <- fGetFinalMoranData("-0.2")
aDF <- fGetFinalMoranData("-0.5")
aDF <- fGetFinalMoranData("-1.0")
View(aDF)
aDF <- fGetFinalMoranData("0.0")
View(aDF)
aDF_0$s <- 0
aDF_0.1 <- -0.1
aDF_0.25 <- -0.25
aDF_0 <- fGetFinalYuleData("0.0")
aDF_0.1 <- fGetFinalYuleData("-0.1")
aDF_0.25 <- fGetFinalYuleData("-0.25")
aDF_0.5 <- fGetFinalYuleData("-0.5")
aDF_0.75 <- fGetFinalYuleData("-0.75")
aDF_0$s <- 0
aDF_0.1$s <- -0.1
aDF_0.25$s <- -0.25
aDF_0.5$s <- -0.5
aDF_0.75$s <- -0.75
aDF <- bind_rows(aDF_0, aDF_0.1, aDF_0.25, aDF_0.5, aDF_0.75)
View(aDF)
aDF <- bind_rows(aDF_0, aDF_0.1, aDF_0.25, aDF_0.5, aDF_0.75) %>%
rename(variant=aFinal, freq=Freq)
View(aDF)
saveRDS(aDF, "../data/negative_yule_moran/processed/yule_combined.rds")
aDF_0 <- fGetFinalMoranData("0.0")
View(aDF_0)
View(aDF)
aDF_0.1 <- fGetFinalMoranData("-0.1")
aDF_0.2 <- fGetFinalMoranData("-0.2")
aDF_0.5 <- fGetFinalMoranData("-0.5")
aDF_1 <- fGetFinalMoranData("-1.0")
aDF <- bind_rows(aDF_0, aDF_0.1, aDF_0.2, aDF_0.5, aDF_1)
View(aDF)
fGetFinalMoranData <- function(selection){
filename <- paste0("moran_initial_", selection, ".csv")
filename1 <- paste0("moran_changes_", selection, ".csv")
aInitial <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename))
changes <- read.csv(paste0("../data/negative_yule_moran/raw_sims/", filename1))[-1, ]
added <- table(changes$added) %>%
as.data.frame() %>%
rename(add=Freq)
killed <- table(changes$killed) %>%
as.data.frame() %>%
rename(kill=Freq)
combined <- full_join(added, killed)
aInitial <- aInitial[, -1] %>%
rename(Var1=index, initial=X0) %>%
mutate(Var1=as.character(Var1))
combined <- full_join(combined, aInitial)
combined[is.na(combined)] <- 0
combined$Var1 <- as.numeric(combined$Var1)
combined <- combined[order(combined$Var1), ]
combined <- combined %>%
mutate(final=initial + add - kill) %>%
filter(final>0) %>%
select(Var1, final) %>%
rename(Freq=final) %>%
mutate(s=as.numeric(selection))
saveRDS(combined, paste0("../data/negative_yule_moran/processed/moran_", selection, ".rds"))
return(combined)
}
aDF_0 <- fGetFinalMoranData("0.0")
aDF_0.1 <- fGetFinalMoranData("-0.1")
aDF_0.2 <- fGetFinalMoranData("-0.2")
aDF_0.5 <- fGetFinalMoranData("-0.5")
aDF_1 <- fGetFinalMoranData("-1.0")
aDF <- bind_rows(aDF_0, aDF_0.1, aDF_0.2, aDF_0.5, aDF_1)
saveRDS(aDF, "../data/negative_yule_moran/processed/moran_combined.rds")
View(aDF)
